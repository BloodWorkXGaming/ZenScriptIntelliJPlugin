{
    parserClass="de.bloodworkxgaming.zenscript.plugin.zsLanguage.parsing.ZsParser"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Zs"
    psiImplClassSuffix="Impl"
    psiPackage="de.bloodworkxgaming.zenscript.plugin.zsLanguage.psi"
    psiImplPackage="de.bloodworkxgaming.zenscript.plugin.zsLanguage.psi.impl"

    elementTypeHolderClass="de.bloodworkxgaming.zenscript.plugin.zsLanguage.psi.ZsTypes"
    elementTypeClass="de.bloodworkxgaming.zenscript.plugin.zsLanguage.psi.ZsElementType"
    tokenTypeClass="de.bloodworkxgaming.zenscript.plugin.zsLanguage.psi.ZsTokenType"

    tokens = [
        L_ROUND_BRACKET = "("
        R_ROUND_BRACKET = ")"
        L_ANGLE_BRACKET = "<"
        R_ANGLE_BRACKET = ">"
        L_SQUARE_BRACKET = "["
        R_SQUARE_BRACKET = "]"
        L_CURLY_BRACKET = "{"
        R_CURLY_BRACKET = "}"

        COMMA=','
        COLON=':'

        LINE_COMMENT='regexp://.*'
        BLOCK_COMMENT='regexp:/\*([^*]|\*+[^*/])*(\*+/)?'

        DOUBLE_QUOTED_STRING="regexp:\"([^\\\"\r\n]|\\[^\r\n])*\"?"
        SINGLE_QUOTED_STRING="regexp:'([^\\\'\r\n]|\\[^\r\n])*'?"

        NUMBER='regexp:-?(0|[1-9]\d*)(\.\d+)?([eE][+-]?\d*)?'

        ANY = "(?<![^\s])any(?![^\s;])"

        BOOL = "(?<![^\s])bool(?![^\s;])"
        BYTE = "(?<![^\s])byte(?![^\s;])"
        SHORT = "(?<![^\s])short(?![^\s;])"
        INT = "(?<![^\s])int(?![^\s;])"
        LONG = "(?<![^\s])long(?![^\s;])"
        FLOAT = "(?<![^\s])float(?![^\s;])"
        DOUBLE = "(?<![^\s])double(?![^\s;])"
        STRING = "(?<![^\s])string(?![^\s;])"

        FUNCTION = "(?<![^\s])function(?![^\s;])"
        IN = "(?<![^\s])in(?![^\s;])"
        VOID = "(?<![^\s])void(?![^\s;])"
        AS = "(?<![^\s])as(?![^\s;])"
        VERSION = "(?<![^\s])version(?![^\s;])"

        IF = "(?<![^\s])if(?![^\s;])"
        ELSE = "(?<![^\s])else(?![^\s;])"
        FOR = "(?<![^\s])for(?![^\s;])"

        RETURN = "(?<![^\s])return(?![^\s;])"

        VAR = "(?<![^\s])var(?![^\s;])"
        VAL = "(?<![^\s])val(?![^\s;])"

        NULL = "(?<![^\s])null(?![^\s;])"
        TRUE = "(?<![^\s])true(?![^\s;])"
        FALSE = "(?<![^\s])false(?![^\s;])"

        IMPORT = "(?<![^\s])import(?![^\s;])"

   ]
}

zsFile ::= item_*

private item_ ::= (property|CRLF)

property ::= (KEY? SEPARATOR VALUE?) | KEY
